{"version":3,"sources":["views/create/creat-event-view.js","views/main/main-view.js","data/user.js","data/calendar-data.js","views/main/MainView.module.css"],"names":["CreateEventView","handleClose","modalShow","controlOptions","handleSubmit","participants","daysArray","timeArray","useState","eventName","setEventName","participantName","setParticipantName","day","setDay","time","setTime","Modal","show","onHide","animation","Header","closeButton","Title","Body","InputGroup","size","className","onChange","e","target","value","Prepend","Text","id","FormControl","aria-label","aria-describedby","multiple","selectArray","selectorName","Number","Footer","Button","variant","onClick","MainView","user","events","useSelector","selectors","getEventsData","dispatch","useDispatch","eventsByParticipant","setEventsByParticipant","selectedParticipant","setSelectedParticipant","setModalShow","useEffect","eventOperations","getEventOperation","validateForm","toast","error","position","POSITION","TOP_CENTER","length","filter","event","data","info","a","title","addEventOperation","includes","styles","header","chooseAll","disabled","isAdmin","Table","striped","bordered","hover","map","name","timeObj","index","availablEevents","days","Array","fill","td","data-id","deleteEl","tagName","window","confirm","parentNode","textContent","eventId","getAttribute","deleteEventOperation","innerHTML","deleteEvent","deleteBtn","User","this","Admin","meetings","module","exports"],"mappings":"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","file":"static/js/5.c9b64a91.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { FormControl, InputGroup, Button, Modal } from 'react-bootstrap';\r\n\r\nimport { Selector } from 'components/';\r\n\r\nexport const CreateEventView = ({\r\n  handleClose,\r\n  modalShow,\r\n  controlOptions,\r\n  handleSubmit,\r\n}) => {\r\n  const { participants, daysArray, timeArray } = controlOptions;\r\n  const [eventName, setEventName] = useState('');\r\n  const [participantName, setParticipantName] = useState();\r\n  const [day, setDay] = useState('');\r\n  const [time, setTime] = useState('');\r\n  return (\r\n    <>\r\n      <Modal show={modalShow} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create event</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <InputGroup\r\n            size=\"sm\"\r\n            className=\"mb-3\"\r\n            onChange={e => setEventName(e.target.value)}\r\n          >\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroup-sizing-sm\">Name</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              aria-label=\"Small\"\r\n              aria-describedby=\"inputGroup-sizing-sm\"\r\n            />\r\n          </InputGroup>\r\n          <Selector\r\n            multiple={true}\r\n            onChange={value => setParticipantName(value)}\r\n            selectArray={participants}\r\n            selectorName=\"participant\"\r\n          />\r\n          <Selector\r\n            multiple={false}\r\n            onChange={value => setDay(Number(value))}\r\n            selectArray={daysArray}\r\n            selectorName=\"day\"\r\n          />\r\n          <Selector\r\n            multiple={false}\r\n            onChange={value => setTime(Number(value))}\r\n            selectArray={timeArray}\r\n            selectorName=\"time\"\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => handleSubmit(participantName, eventName, day, time)}\r\n          >\r\n            Create event\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nCreateEventView.propTypes = {\r\n  handleClose: PropTypes.func,\r\n  modalShow: PropTypes.bool,\r\n  controlOptions: PropTypes.objectOf(PropTypes.array),\r\n  handleSubmit: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { Selector } from 'components/';\r\nimport { CreateEventView } from 'views/create/';\r\nimport { participants, daysArray, timeArray } from 'data/calendar-data';\r\n\r\nimport { selectors, eventOperations } from 'redux/index';\r\nimport styles from './MainView.module.css';\r\n\r\nexport default function MainView({ user }) {\r\n  const { events } = useSelector(selectors.getEventsData);\r\n  const dispatch = useDispatch();\r\n\r\n  const [eventsByParticipant, setEventsByParticipant] = useState([]);\r\n  const [selectedParticipant, setSelectedParticipant] = useState('');\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  // setting events user to state\r\n  useEffect(() => dispatch(eventOperations.getEventOperation()), [dispatch]);\r\n\r\n  // open modal fn\r\n  const handleModalShow = () => setModalShow(true);\r\n\r\n  // close modal fn\r\n  const handleModalClose = () => setModalShow(false);\r\n\r\n  // sync validation form\r\n  const validateForm = (participantName, eventName, day, time) => {\r\n    if (eventName === '') {\r\n      toast.error('Please type event name!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    if (day === '') {\r\n      toast.error('Please choose day!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    if (time === '') {\r\n      toast.error('Please choose time!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    if (participantName.length === 0) {\r\n      toast.error('Please choose participant!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    const isAvailableTime = events.filter(\r\n      event => event.data.info.day === day && event.data.info.time === time,\r\n    );\r\n    if (isAvailableTime.length) {\r\n      toast.error('Please choose other time or date!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // submit form\r\n  const handleSubmit = async (participantName, eventName, day, time) => {\r\n    if (!validateForm(participantName, eventName, day, time)) {\r\n      return;\r\n    }\r\n    const event = {\r\n      title: `'${eventName}'`,\r\n      participants: participantName,\r\n      info: {\r\n        day,\r\n        time,\r\n      },\r\n    };\r\n    dispatch(eventOperations.addEventOperation(event));\r\n    setModalShow(false);\r\n  };\r\n\r\n  // select participant fn\r\n  const getParticipant = value => {\r\n    if (!value) {\r\n      setSelectedParticipant('');\r\n      return;\r\n    }\r\n    setSelectedParticipant(Number(value));\r\n  };\r\n\r\n  // deleting event on delete button click\r\n  const deleteEvent = event => {\r\n    const deleteEl = event.target;\r\n    if (deleteEl.tagName === 'BUTTON') {\r\n      const result = window.confirm(\r\n        `Are you shure you want to delete \"${deleteEl.parentNode.textContent}\" event?`,\r\n      );\r\n      if (result) {\r\n        const eventId = event.target.getAttribute('data-id');\r\n        dispatch(eventOperations.deleteEventOperation(eventId));\r\n        deleteEl.parentNode.innerHTML = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  // filter events by selected participant\r\n  useEffect(() => {\r\n    selectedParticipant\r\n      ? setEventsByParticipant(\r\n          events.filter(event => {\r\n            return event.data.participants.includes(selectedParticipant);\r\n          }),\r\n        )\r\n      : setEventsByParticipant(events);\r\n  }, [selectedParticipant, events]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <Selector\r\n          chooseAll={true}\r\n          selectArray={participants}\r\n          onChange={getParticipant}\r\n          multiple={false}\r\n          selectorName=\"participant\"\r\n        />\r\n        <Button\r\n          variant=\"primary\"\r\n          disabled={!user.isAdmin}\r\n          onClick={() => handleModalShow()}\r\n        >\r\n          Create event\r\n        </Button>\r\n      </div>\r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            {daysArray.map(day => (\r\n              <th key={day.id}>{day.name}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {timeArray.map((timeObj, index) => {\r\n            const availablEevents = eventsByParticipant?.filter(\r\n              event => event.data.info.time === index,\r\n            );\r\n            const days = new Array(5).fill('');\r\n            availablEevents?.map(event => {\r\n              const { day } = event.data.info;\r\n              days[day] = {\r\n                name: `${event.data.title}`,\r\n                id: event.id,\r\n                className: 'succes',\r\n              };\r\n              return true;\r\n            });\r\n            return (\r\n              <tr key={timeObj.id}>\r\n                <td>{timeObj.name}</td>\r\n                {days.map((day, index) => (\r\n                  <td key={day.id || index} className={styles.td}>\r\n                    {day.name || ''}\r\n                    {day.name && (\r\n                      <Button\r\n                        key={day.id}\r\n                        data-id={day.id}\r\n                        variant=\"info\"\r\n                        disabled={!user.isAdmin}\r\n                        onClick={e => deleteEvent(e)}\r\n                        className={styles.deleteBtn}\r\n                      >\r\n                        x\r\n                      </Button>\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      {modalShow && (\r\n        <CreateEventView\r\n          modalShow={modalShow}\r\n          handleSubmit={handleSubmit}\r\n          handleClose={handleModalClose}\r\n          controlOptions={{ participants, daysArray, timeArray }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\nMainView.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n","export class User {\r\n  isAdmin = false;\r\n  constructor(user) {\r\n    this.user = user;\r\n  }\r\n}\r\nexport class Admin extends User {\r\n  constructor(user) {\r\n    super(user);\r\n    this.isAdmin = true;\r\n  }\r\n}\r\n","import { User, Admin } from './user';\r\n\r\nexport const daysArray = [\r\n  {\r\n    id: 0,\r\n    name: 'monday',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'thuesday',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'wednesday',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'thursday',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'friday',\r\n  },\r\n];\r\nexport const timeArray = [\r\n  {\r\n    id: 0,\r\n    name: '10:00',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: '11:00',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '12:00',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '13:00',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '14:00',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '15:00',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '16:00',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '17:00',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '18:00',\r\n  },\r\n];\r\n\r\nexport const participants = [\r\n  new User({\r\n    id: 1,\r\n    name: 'John',\r\n    meetings: [],\r\n  }),\r\n  new User({\r\n    id: 2,\r\n    name: 'Maria',\r\n    meetings: [],\r\n  }),\r\n  new User({\r\n    id: 3,\r\n    name: 'David',\r\n    meetings: [],\r\n  }),\r\n  new User({\r\n    id: 4,\r\n    name: 'Anna',\r\n    meetings: [],\r\n  }),\r\n  new Admin({\r\n    id: 5,\r\n    name: 'BIG BOSS',\r\n    meetings: [],\r\n  }),\r\n];\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainView_header__Bnb5Y\",\"deleteBtn\":\"MainView_deleteBtn__26nOX\"};"],"sourceRoot":""}
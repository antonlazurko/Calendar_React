{"version":3,"sources":["views/MainView.module.css","components/container.module.css","components/container.js","components/selector.js","views/creat-event-view.js","data/user.js","data/calendar-data.js","sevices/API-service.js","views/main-view.js","views/auth-view.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Selector","multiple","onChange","selectArray","selectorName","Form","id","Group","controlId","Label","Control","as","custom","e","target","value","map","item","user","name","CreateEventView","handleClose","modalShow","controlOptions","handleSubmit","participants","daysArray","timeArray","useState","eventName","setEventName","participantName","setParticipantName","day","setDay","time","setTime","Modal","show","onHide","animation","Header","closeButton","Title","Body","InputGroup","size","Prepend","Text","FormControl","aria-label","aria-describedby","Number","Footer","Button","variant","onClick","User","isAdmin","this","Admin","meetings","SYSTEM","ENTITY","URL","instance","eventsSingleton","a","axios","get","data","status","body","post","delete","MainView","setMeetings","meetingsByParticipant","setMeetingsByParticipant","selectedParticipant","setSelectedParticipant","setModalShow","validateForm","toast","error","position","POSITION","TOP_CENTER","length","getEvent","then","res","event","push","JSON5","parse","filter","meeting","info","title","stringifyMeeting","JSON","stringify","replace","addEvent","success","parsedMeeting","prevMeetings","deleteEvent","deleteEl","tagName","window","confirm","parentNode","textContent","meetingId","getAttribute","innerHTML","useEffect","parsedMeetings","fetchData","includes","header","disabled","Table","striped","bordered","hover","timeObj","index","availableMeetings","days","Array","fill","td","data-id","AuthView","onSubmit","participantId","setParticipantId","console","log","find","UNAUTHORISED","AUTHORISED_USER","AUTHORISED_ADMIN","App","authStatus","setAuthStatus","autoClose","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f0095cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainView_header__1WkFo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3sfS-\"};","import PropTypes from 'prop-types';\r\nimport styles from './container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Form } from 'react-bootstrap';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\nexport default function Selector({\r\n  multiple,\r\n  onChange,\r\n  selectArray,\r\n  selectorName,\r\n}) {\r\n  return (\r\n    <>\r\n      <Form id={selectorName}>\r\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n          <Form.Label>Select {`${selectorName}`}</Form.Label>\r\n          <Form.Control\r\n            as=\"select\"\r\n            custom\r\n            onChange={e => onChange(e.target.value)}\r\n          >\r\n            {!multiple && <option></option>}\r\n            {selectArray?.map(item => (\r\n              <option\r\n                key={item.user?.id || item.id}\r\n                value={item.user?.id || item.id}\r\n              >\r\n                {item.user?.name || item.name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\nSelector.propTypes = {\r\n  multiple: propTypes.bool,\r\n  onChange: PropTypes.func,\r\n  selectArray: PropTypes.arrayOf(PropTypes.object),\r\n  selectorName: propTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { FormControl, InputGroup, Button, Modal } from 'react-bootstrap';\r\n\r\nimport Selector from '../components/selector';\r\n\r\nexport default function CreateEventView({\r\n  handleClose,\r\n  modalShow,\r\n  controlOptions,\r\n  handleSubmit,\r\n}) {\r\n  const { participants, daysArray, timeArray } = controlOptions;\r\n  const [eventName, setEventName] = useState('');\r\n  const [participantName, setParticipantName] = useState([]);\r\n  const [day, setDay] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  return (\r\n    <>\r\n      <Modal show={modalShow} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create event</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <InputGroup\r\n            size=\"sm\"\r\n            className=\"mb-3\"\r\n            onChange={e => setEventName(e.target.value)}\r\n          >\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroup-sizing-sm\">Name</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              aria-label=\"Small\"\r\n              aria-describedby=\"inputGroup-sizing-sm\"\r\n            />\r\n          </InputGroup>\r\n          <Selector\r\n            multiple={true}\r\n            onChange={value => setParticipantName(Number(value))}\r\n            selectArray={participants}\r\n            selectorName=\"participant\"\r\n          />\r\n          <Selector\r\n            multiple={false}\r\n            onChange={value => setDay(Number(value))}\r\n            selectArray={daysArray}\r\n            selectorName=\"day\"\r\n          />\r\n          <Selector\r\n            multiple={false}\r\n            onChange={value => setTime(Number(value))}\r\n            selectArray={timeArray}\r\n            selectorName=\"time\"\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => handleSubmit(participantName, eventName, day, time)}\r\n          >\r\n            Create event\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nCreateEventView.propTypes = {\r\n  handleClose: PropTypes.func,\r\n  modalShow: PropTypes.bool,\r\n  controlOptions: PropTypes.objectOf(PropTypes.array),\r\n  handleSubmit: PropTypes.func,\r\n};\r\n","export class User {\r\n  isAdmin = false;\r\n  constructor(user) {\r\n    this.user = user;\r\n  }\r\n}\r\nexport class Admin extends User {\r\n  constructor(user) {\r\n    super(user);\r\n    this.isAdmin = true;\r\n  }\r\n}\r\n","import { User, Admin } from './user';\r\n\r\nexport const daysArray = [\r\n  {\r\n    id: 0,\r\n    name: 'monday',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'thuesday',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'wednesday',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'thursday',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'friday',\r\n  },\r\n];\r\nexport const timeArray = [\r\n  {\r\n    id: 0,\r\n    name: '10:00',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: '11:00',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '12:00',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '13:00',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '14:00',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '15:00',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '16:00',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '17:00',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '18:00',\r\n  },\r\n];\r\n\r\nexport const participants = [\r\n  new User({\r\n    id: 1,\r\n    name: 'John',\r\n    meetings: [],\r\n  }),\r\n  new User({\r\n    id: 2,\r\n    name: 'Maria',\r\n    meetings: [],\r\n  }),\r\n  new User({\r\n    id: 3,\r\n    name: 'David',\r\n    meetings: [],\r\n  }),\r\n  new User({\r\n    id: 4,\r\n    name: 'Anna',\r\n    meetings: [],\r\n  }),\r\n  new Admin({\r\n    id: 5,\r\n    name: 'BIG BOSS',\r\n    meetings: [],\r\n  }),\r\n];\r\n","import axios from 'axios';\r\n// import 'regenerator-runtime/runtime.js';\r\n// import ErrorDecorator from './API-error-Decorator.js';\r\nconst SYSTEM = `anton_lazurko`;\r\nconst ENTITY = `events`;\r\nconst URL = 'http://158.101.166.74:8080/api/data/';\r\n\r\nlet instance = null;\r\n\r\nclass EventAPI {\r\n  constructor() {\r\n    if (!instance) {\r\n      instance = this;\r\n    }\r\n    return instance;\r\n  }\r\n  // @ErrorDecorator\r\n  async getEvent() {\r\n    const { data, status } = await axios.get(`${URL}${SYSTEM}/${ENTITY}`);\r\n    return { data, status };\r\n  }\r\n  // @ErrorDecorator\r\n  async addEvent(body) {\r\n    const { data, status } = await axios.post(\r\n      `${URL}${SYSTEM}/${ENTITY}`,\r\n      body,\r\n    );\r\n    return { data, status };\r\n  }\r\n  // @ErrorDecorator\r\n  async deleteEvent(id) {\r\n    const { status } = await axios.delete(`${URL}${SYSTEM}/${ENTITY}/${id}`);\r\n    return status;\r\n  }\r\n}\r\nexport const eventsSingleton = new EventAPI();\r\n","import PropTypes from 'prop-types';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport JSON5 from 'json5';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Selector from '../components/selector';\r\nimport CreateEventView from './creat-event-view';\r\nimport { participants, daysArray, timeArray } from '../data/calendar-data';\r\nimport { eventsSingleton } from '../sevices/API-service';\r\nimport styles from './MainView.module.css';\r\n\r\nexport default function MainView({ isAdmin }) {\r\n  const [meetings, setMeetings] = useState([]);\r\n  const [meetingsByParticipant, setMeetingsByParticipant] = useState([]);\r\n  const [selectedParticipant, setSelectedParticipant] = useState('');\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const handleModalShow = () => setModalShow(true);\r\n  const handleModalClose = () => setModalShow(false);\r\n  const validateForm = async (participantName, eventName, day, time) => {\r\n    if (eventName === '') {\r\n      toast.error('Please type event name!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    if (day === '') {\r\n      toast.error('Please choose day!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    if (time === '') {\r\n      toast.error('Please choose time!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    if (participantName.length === 0) {\r\n      toast.error('Please choose participant!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    const meetings = [];\r\n\r\n    // using singletone pattern\r\n    await eventsSingleton.getEvent().then(res => {\r\n      res.data?.map(event =>\r\n        meetings.push({ id: event.id, data: JSON5.parse(event.data) }),\r\n      );\r\n    });\r\n\r\n    const isAvailableTime = meetings.filter(\r\n      meeting =>\r\n        meeting.data.info.day === day && meeting.data.info.time === time,\r\n    );\r\n    if (isAvailableTime.length) {\r\n      toast.error('Please choose other time or date!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const handleSubmit = async (participantName, eventName, day, time) => {\r\n    if (!(await validateForm(participantName, eventName, day, time))) {\r\n      return;\r\n    }\r\n    const meeting = {\r\n      title: `'${eventName}'`,\r\n      participants: [participantName],\r\n      info: {\r\n        day,\r\n        time,\r\n      },\r\n    };\r\n\r\n    const stringifyMeeting = JSON.stringify(meeting).replace(/\"/g, '');\r\n    await eventsSingleton\r\n      .addEvent(\r\n        `{\r\n    \"data\":\"${stringifyMeeting}\"\r\n  }`,\r\n      )\r\n      .then(({ data, status }) => {\r\n        if (status === 200) {\r\n          toast.success('Event succesfully added!', {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n          const parsedMeeting = {\r\n            id: data.id,\r\n            data: JSON5.parse(data.data),\r\n          };\r\n          setMeetings(prevMeetings => [...prevMeetings, parsedMeeting]);\r\n        }\r\n      });\r\n    setModalShow(false);\r\n  };\r\n  const getParticipant = value => {\r\n    if (!value) {\r\n      setSelectedParticipant('');\r\n      return;\r\n    }\r\n    setSelectedParticipant(Number(value));\r\n  };\r\n  const deleteEvent = async event => {\r\n    const deleteEl = event.target;\r\n    if (deleteEl.tagName === 'BUTTON') {\r\n      const result = window.confirm(\r\n        `Are you shure you want to delete \"${deleteEl.parentNode.textContent}\" event?`,\r\n      );\r\n      if (result) {\r\n        const meetingId = event.target.getAttribute('data-id');\r\n\r\n        await eventsSingleton.deleteEvent(meetingId).then(status => {\r\n          if (status === 204) {\r\n            toast.success('Event succesfully deleted!', {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            deleteEl.parentNode.innerHTML = '';\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const { data, status } = await eventsSingleton.getEvent();\r\n      if (data) {\r\n        const parsedMeetings = data?.map(event => ({\r\n          id: event.id,\r\n          data: JSON5.parse(event.data),\r\n        }));\r\n        setMeetings(parsedMeetings);\r\n        toast.success(`Events succesfully get with status: ${status}!`, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        return;\r\n      }\r\n      toast.success('There are no events in your calendar yet!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      setMeetings([]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    selectedParticipant\r\n      ? setMeetingsByParticipant(\r\n          meetings.filter(meeting => {\r\n            return meeting.data.participants.includes(selectedParticipant);\r\n          }),\r\n        )\r\n      : setMeetingsByParticipant(meetings);\r\n  }, [selectedParticipant, meetings]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <Selector\r\n          selectArray={participants}\r\n          onChange={getParticipant}\r\n          multiple={false}\r\n          selectorName=\"participant\"\r\n        />\r\n        <Button\r\n          variant=\"secondary\"\r\n          disabled={!isAdmin}\r\n          onClick={() => handleModalShow()}\r\n        >\r\n          Create event\r\n        </Button>\r\n      </div>\r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            {daysArray.map(day => (\r\n              <th key={day.id}>{day.name}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {timeArray.map((timeObj, index) => {\r\n            const availableMeetings = meetingsByParticipant?.filter(\r\n              meeting => meeting.data.info.time === index,\r\n            );\r\n            const days = new Array(5).fill('');\r\n            availableMeetings?.map(meeting => {\r\n              const { day } = meeting.data.info;\r\n              days[day] = {\r\n                name: `${meeting.data.title}`,\r\n                id: meeting.id,\r\n                className: 'succes',\r\n              };\r\n              return true;\r\n            });\r\n            return (\r\n              <tr key={timeObj.id}>\r\n                <td>{timeObj.name}</td>\r\n                {days.map((day, index) => (\r\n                  <td key={day.id || index} className={styles.td}>\r\n                    {day.name || ''}\r\n                    {day.name && (\r\n                      <Button\r\n                        key={day.id}\r\n                        data-id={day.id}\r\n                        variant=\"secondary\"\r\n                        disabled={!isAdmin}\r\n                        onClick={e => deleteEvent(e)}\r\n                      >\r\n                        x\r\n                      </Button>\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      {modalShow && (\r\n        <CreateEventView\r\n          modalShow={modalShow}\r\n          handleSubmit={handleSubmit}\r\n          handleClose={handleModalClose}\r\n          controlOptions={{ participants, daysArray, timeArray }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\nMainView.propTypes = {\r\n  isAdmin: PropTypes.bool.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { participants } from '../data/calendar-data';\r\n\r\nimport Selector from '../components/selector';\r\nexport default function AuthView({ onSubmit }) {\r\n  const [participantId, setParticipantId] = useState('');\r\n  const handleSelectChange = value => {\r\n    setParticipantId(Number(value));\r\n  };\r\n  useEffect(() => {\r\n    console.log(participantId);\r\n  }, [participantId]);\r\n  const handleSubmit = () => {\r\n    if (participantId === 0) {\r\n      toast.error('Please autorise!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return;\r\n    }\r\n    const member = participants.find(({ user }) => {\r\n      return user.id === participantId;\r\n    });\r\n    if (member.isAdmin) {\r\n      onSubmit(true);\r\n      return;\r\n    } else {\r\n      onSubmit(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Selector\r\n        selectArray={participants}\r\n        selectorName=\"participant\"\r\n        onChange={handleSelectChange}\r\n        multiple={false}\r\n      />\r\n      <Button variant=\"primary\" onClick={() => handleSubmit()}>\r\n        Autorise\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\nAuthView.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Container from './components/container';\nimport MainView from './views/main-view';\nimport AuthView from './views/auth-view';\n\nconst UNAUTHORISED = 'unauthorised';\nconst AUTHORISED_USER = 'autorised_user';\nconst AUTHORISED_ADMIN = 'autorised_admin';\n\nfunction App() {\n  const [authStatus, setAuthStatus] = useState(UNAUTHORISED);\n  const handleAuthSubmit = value => {\n    if (value) {\n      setAuthStatus(AUTHORISED_ADMIN);\n      return;\n    } else {\n      setAuthStatus(AUTHORISED_USER);\n    }\n  };\n  return (\n    <Container>\n      {authStatus === UNAUTHORISED && <AuthView onSubmit={handleAuthSubmit} />}\n      {authStatus === AUTHORISED_USER && <MainView isAdmin={false} />}\n      {authStatus === AUTHORISED_ADMIN && <MainView isAdmin={true} />}\n      <ToastContainer autoClose={1800} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
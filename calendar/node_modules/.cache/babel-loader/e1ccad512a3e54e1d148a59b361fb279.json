{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Ciklum/Calendar_React/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button}from'react-bootstrap';import{useState,useContext}from'react';import{useHistory}from'react-router-dom';import{toast}from'react-toastify';import{participants}from'../../data/calendar-data';import{userContext}from'../../userContext';import Selector from'../../components/selector/selector';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AuthView(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),participantId=_useState2[0],setParticipantId=_useState2[1];var history=useHistory();var _useContext=useContext(userContext),getUser=_useContext.getUser;var handleSubmit=function handleSubmit(){if(participantId===0){toast.error('Please autorise!',{position:toast.POSITION.TOP_CENTER});return;}var member=participants.find(function(_ref){var user=_ref.user;return user.id===participantId;});// geting curren authorized user\ngetUser(member);//redirecting to Main View\nhistory.push('/');};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Selector,{selectArray:participants,selectorName:\"participant\",onChange:function onChange(value){return setParticipantId(Number(value));},multiple:false}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){return handleSubmit();},children:\"Autorise\"})]});}","map":{"version":3,"sources":["D:/Projects/Ciklum/Calendar_React/calendar/src/views/auth/auth-view.js"],"names":["Button","useState","useContext","useHistory","toast","participants","userContext","Selector","AuthView","participantId","setParticipantId","history","getUser","handleSubmit","error","position","POSITION","TOP_CENTER","member","find","user","id","push","value","Number"],"mappings":"iKACA,OAASA,MAAT,KAAuB,iBAAvB,CACA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,OAArC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CAEA,OAASC,YAAT,KAA6B,0BAA7B,CACA,OAASC,WAAT,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,oCAArB,C,6IAEA,cAAe,SAASC,CAAAA,QAAT,EAAoB,eACSP,QAAQ,CAAC,CAAD,CADjB,wCAC1BQ,aAD0B,eACXC,gBADW,eAEjC,GAAMC,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CAFiC,gBAGbD,UAAU,CAACI,WAAD,CAHG,CAGzBM,OAHyB,aAGzBA,OAHyB,CAKjC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAIJ,aAAa,GAAK,CAAtB,CAAyB,CACvBL,KAAK,CAACU,KAAN,CAAY,kBAAZ,CAAgC,CAC9BC,QAAQ,CAAEX,KAAK,CAACY,QAAN,CAAeC,UADK,CAAhC,EAGA,OACD,CACD,GAAMC,CAAAA,MAAM,CAAGb,YAAY,CAACc,IAAb,CAAkB,cAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAC7C,MAAOA,CAAAA,IAAI,CAACC,EAAL,GAAYZ,aAAnB,CACD,CAFc,CAAf,CAIA;AACAG,OAAO,CAACM,MAAD,CAAP,CAEA;AACAP,OAAO,CAACW,IAAR,CAAa,GAAb,EACD,CAhBD,CAkBA,mBACE,wCACE,KAAC,QAAD,EACE,WAAW,CAAEjB,YADf,CAEE,YAAY,CAAC,aAFf,CAGE,QAAQ,CAAE,kBAAAkB,KAAK,QAAIb,CAAAA,gBAAgB,CAACc,MAAM,CAACD,KAAD,CAAP,CAApB,EAHjB,CAIE,QAAQ,CAAE,KAJZ,EADF,cAOE,KAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAE,yBAAMV,CAAAA,YAAY,EAAlB,EAAnC,sBAPF,GADF,CAaD","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { participants } from '../../data/calendar-data';\r\nimport { userContext } from '../../userContext';\r\nimport Selector from '../../components/selector/selector';\r\n\r\nexport default function AuthView() {\r\n  const [participantId, setParticipantId] = useState(0);\r\n  const history = useHistory();\r\n  const { getUser } = useContext(userContext);\r\n\r\n  const handleSubmit = () => {\r\n    if (participantId === 0) {\r\n      toast.error('Please autorise!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return;\r\n    }\r\n    const member = participants.find(({ user }) => {\r\n      return user.id === participantId;\r\n    });\r\n\r\n    // geting curren authorized user\r\n    getUser(member);\r\n\r\n    //redirecting to Main View\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Selector\r\n        selectArray={participants}\r\n        selectorName=\"participant\"\r\n        onChange={value => setParticipantId(Number(value))}\r\n        multiple={false}\r\n      />\r\n      <Button variant=\"primary\" onClick={() => handleSubmit()}>\r\n        Autorise\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\nAuthView.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
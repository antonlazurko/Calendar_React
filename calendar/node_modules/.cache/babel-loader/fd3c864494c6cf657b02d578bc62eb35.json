{"ast":null,"code":"import{Form}from'react-bootstrap';import{propTypes}from'react-bootstrap/esm/Image';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Selector(_ref){var multiple=_ref.multiple,onChange=_ref.onChange,selectArray=_ref.selectArray,selectorName=_ref.selectorName;var getSelectedMembers=function getSelectedMembers(target){if(target.multiple){var values=[];var select=target.options;for(var i=0;i<select.length;i+=1){if(select[i].selected){values.push(Number(select[i].value));}}onChange(values);return;}onChange(Number(target.value));};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Form,{id:selectorName,children:/*#__PURE__*/_jsxs(Form.Group,{controlId:\"exampleForm.SelectCustom\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[\"Select \",\"\".concat(selectorName)]}),/*#__PURE__*/_jsx(Form.Control,{className:\"selector\",as:\"select\",multiple:multiple,custom:true,onChange:function onChange(e){return getSelectedMembers(e.target);},children:selectArray===null||selectArray===void 0?void 0:selectArray.map(function(item){var _item$user,_item$user2,_item$user3;return/*#__PURE__*/_jsx(\"option\",{value:((_item$user2=item.user)===null||_item$user2===void 0?void 0:_item$user2.id)||item.id,children:((_item$user3=item.user)===null||_item$user3===void 0?void 0:_item$user3.name)||item.name},((_item$user=item.user)===null||_item$user===void 0?void 0:_item$user.id)||item.id);})})]})})});}","map":{"version":3,"sources":["D:/Projects/Ciklum/Calendar_React/calendar/src/components/selector/selector.js"],"names":["Form","propTypes","Selector","multiple","onChange","selectArray","selectorName","getSelectedMembers","target","values","select","options","i","length","selected","push","Number","value","e","map","item","user","id","name"],"mappings":"AACA,OAASA,IAAT,KAAqB,iBAArB,CACA,OAASC,SAAT,KAA0B,2BAA1B,C,6IAEA,cAAe,SAASC,CAAAA,QAAT,MAKZ,IAJDC,CAAAA,QAIC,MAJDA,QAIC,CAHDC,QAGC,MAHDA,QAGC,CAFDC,WAEC,MAFDA,WAEC,CADDC,YACC,MADDA,YACC,CACD,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,MAAM,CAAI,CACnC,GAAIA,MAAM,CAACL,QAAX,CAAqB,CACnB,GAAMM,CAAAA,MAAM,CAAG,EAAf,CAEA,GAAMC,CAAAA,MAAM,CAAGF,MAAM,CAACG,OAAtB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,MAAM,CAACG,MAA3B,CAAmCD,CAAC,EAAI,CAAxC,CAA2C,CACzC,GAAIF,MAAM,CAACE,CAAD,CAAN,CAAUE,QAAd,CAAwB,CACtBL,MAAM,CAACM,IAAP,CAAYC,MAAM,CAACN,MAAM,CAACE,CAAD,CAAN,CAAUK,KAAX,CAAlB,EACD,CACF,CACDb,QAAQ,CAACK,MAAD,CAAR,CACA,OACD,CACDL,QAAQ,CAACY,MAAM,CAACR,MAAM,CAACS,KAAR,CAAP,CAAR,CACD,CAdD,CAgBA,mBACE,sCACE,KAAC,IAAD,EAAM,EAAE,CAAEX,YAAV,uBACE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,0BAAtB,wBACE,MAAC,IAAD,CAAM,KAAN,gCAAuBA,YAAvB,IADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,SAAS,CAAC,UADZ,CAEE,EAAE,CAAC,QAFL,CAGE,QAAQ,CAAEH,QAHZ,CAIE,MAAM,KAJR,CAKE,QAAQ,CAAE,kBAAAe,CAAC,QAAIX,CAAAA,kBAAkB,CAACW,CAAC,CAACV,MAAH,CAAtB,EALb,UAOGH,WAPH,SAOGA,WAPH,iBAOGA,WAAW,CAAEc,GAAb,CAAiB,SAAAC,IAAI,4DACpB,eAEE,KAAK,CAAE,cAAAA,IAAI,CAACC,IAAL,kDAAWC,EAAX,GAAiBF,IAAI,CAACE,EAF/B,UAIG,cAAAF,IAAI,CAACC,IAAL,kDAAWE,IAAX,GAAmBH,IAAI,CAACG,IAJ3B,EACO,aAAAH,IAAI,CAACC,IAAL,gDAAWC,EAAX,GAAiBF,IAAI,CAACE,EAD7B,CADoB,EAArB,CAPH,EAFF,GADF,EADF,EADF,CAyBD","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Form } from 'react-bootstrap';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\nexport default function Selector({\r\n  multiple,\r\n  onChange,\r\n  selectArray,\r\n  selectorName,\r\n}) {\r\n  const getSelectedMembers = target => {\r\n    if (target.multiple) {\r\n      const values = [];\r\n\r\n      const select = target.options;\r\n      for (let i = 0; i < select.length; i += 1) {\r\n        if (select[i].selected) {\r\n          values.push(Number(select[i].value));\r\n        }\r\n      }\r\n      onChange(values);\r\n      return;\r\n    }\r\n    onChange(Number(target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form id={selectorName}>\r\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n          <Form.Label>Select {`${selectorName}`}</Form.Label>\r\n          <Form.Control\r\n            className=\"selector\"\r\n            as=\"select\"\r\n            multiple={multiple}\r\n            custom\r\n            onChange={e => getSelectedMembers(e.target)}\r\n          >\r\n            {selectArray?.map(item => (\r\n              <option\r\n                key={item.user?.id || item.id}\r\n                value={item.user?.id || item.id}\r\n              >\r\n                {item.user?.name || item.name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\nSelector.propTypes = {\r\n  multiple: propTypes.bool,\r\n  onChange: PropTypes.func,\r\n  selectArray: PropTypes.arrayOf(PropTypes.object),\r\n  selectorName: propTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Ciklum\\\\Calendar_React\\\\calendar\\\\src\\\\components\\\\selector\\\\selector.js\";\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Selector({\n  multiple,\n  onChange,\n  selectArray,\n  selectorName\n}) {\n  const getSelectedMembers = target => {\n    if (target.multiple) {\n      const values = [];\n      const select = target.options;\n\n      for (let i = 0; i < select.length; i += 1) {\n        if (select[i].selected) {\n          values.push(Number(select[i].value));\n        }\n      }\n\n      onChange(values);\n      return;\n    }\n\n    onChange(Number(target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      id: selectorName,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"exampleForm.SelectCustom\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: [\"Select \", `${selectorName}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"selector\",\n          as: \"select\",\n          multiple: multiple,\n          custom: true,\n          onChange: e => getSelectedMembers(e.target),\n          children: selectArray === null || selectArray === void 0 ? void 0 : selectArray.map(item => {\n            var _item$user, _item$user2, _item$user3;\n\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: ((_item$user2 = item.user) === null || _item$user2 === void 0 ? void 0 : _item$user2.id) || item.id,\n              children: ((_item$user3 = item.user) === null || _item$user3 === void 0 ? void 0 : _item$user3.name) || item.name\n            }, ((_item$user = item.user) === null || _item$user === void 0 ? void 0 : _item$user.id) || item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Selector;\nSelector.propTypes = {\n  multiple: propTypes.bool,\n  onChange: PropTypes.func,\n  selectArray: PropTypes.arrayOf(PropTypes.object),\n  selectorName: propTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"sources":["D:/Projects/Ciklum/Calendar_React/calendar/src/components/selector/selector.js"],"names":["PropTypes","Form","propTypes","Selector","multiple","onChange","selectArray","selectorName","getSelectedMembers","target","values","select","options","i","length","selected","push","Number","value","e","map","item","user","id","name","bool","func","arrayOf","object","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,SAAT,QAA0B,2BAA1B;;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAC/BC,EAAAA,QAD+B;AAE/BC,EAAAA,QAF+B;AAG/BC,EAAAA,WAH+B;AAI/BC,EAAAA;AAJ+B,CAAlB,EAKZ;AACD,QAAMC,kBAAkB,GAAGC,MAAM,IAAI;AACnC,QAAIA,MAAM,CAACL,QAAX,EAAqB;AACnB,YAAMM,MAAM,GAAG,EAAf;AAEA,YAAMC,MAAM,GAAGF,MAAM,CAACG,OAAtB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,IAAI,CAAxC,EAA2C;AACzC,YAAIF,MAAM,CAACE,CAAD,CAAN,CAAUE,QAAd,EAAwB;AACtBL,UAAAA,MAAM,CAACM,IAAP,CAAYC,MAAM,CAACN,MAAM,CAACE,CAAD,CAAN,CAAUK,KAAX,CAAlB;AACD;AACF;;AACDb,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACA;AACD;;AACDL,IAAAA,QAAQ,CAACY,MAAM,CAACR,MAAM,CAACS,KAAR,CAAP,CAAR;AACD,GAdD;;AAgBA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAEX,YAAV;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,0BAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,gCAAqB,GAAEA,YAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,EAAE,EAAC,QAFL;AAGE,UAAA,QAAQ,EAAEH,QAHZ;AAIE,UAAA,MAAM,MAJR;AAKE,UAAA,QAAQ,EAAEe,CAAC,IAAIX,kBAAkB,CAACW,CAAC,CAACV,MAAH,CALnC;AAAA,oBAOGH,WAPH,aAOGA,WAPH,uBAOGA,WAAW,CAAEc,GAAb,CAAiBC,IAAI;AAAA;;AAAA,gCACpB;AAEE,cAAA,KAAK,EAAE,gBAAAA,IAAI,CAACC,IAAL,4DAAWC,EAAX,KAAiBF,IAAI,CAACE,EAF/B;AAAA,wBAIG,gBAAAF,IAAI,CAACC,IAAL,4DAAWE,IAAX,KAAmBH,IAAI,CAACG;AAJ3B,eACO,eAAAH,IAAI,CAACC,IAAL,0DAAWC,EAAX,KAAiBF,IAAI,CAACE,EAD7B;AAAA;AAAA;AAAA;AAAA,oBADoB;AAAA,WAArB;AAPH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAyBD;KA/CuBpB,Q;AAgDxBA,QAAQ,CAACD,SAAT,GAAqB;AACnBE,EAAAA,QAAQ,EAAEF,SAAS,CAACuB,IADD;AAEnBpB,EAAAA,QAAQ,EAAEL,SAAS,CAAC0B,IAFD;AAGnBpB,EAAAA,WAAW,EAAEN,SAAS,CAAC2B,OAAV,CAAkB3B,SAAS,CAAC4B,MAA5B,CAHM;AAInBrB,EAAAA,YAAY,EAAEL,SAAS,CAAC2B;AAJL,CAArB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Form } from 'react-bootstrap';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\nexport default function Selector({\r\n  multiple,\r\n  onChange,\r\n  selectArray,\r\n  selectorName,\r\n}) {\r\n  const getSelectedMembers = target => {\r\n    if (target.multiple) {\r\n      const values = [];\r\n\r\n      const select = target.options;\r\n      for (let i = 0; i < select.length; i += 1) {\r\n        if (select[i].selected) {\r\n          values.push(Number(select[i].value));\r\n        }\r\n      }\r\n      onChange(values);\r\n      return;\r\n    }\r\n    onChange(Number(target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form id={selectorName}>\r\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n          <Form.Label>Select {`${selectorName}`}</Form.Label>\r\n          <Form.Control\r\n            className=\"selector\"\r\n            as=\"select\"\r\n            multiple={multiple}\r\n            custom\r\n            onChange={e => getSelectedMembers(e.target)}\r\n          >\r\n            {selectArray?.map(item => (\r\n              <option\r\n                key={item.user?.id || item.id}\r\n                value={item.user?.id || item.id}\r\n              >\r\n                {item.user?.name || item.name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\nSelector.propTypes = {\r\n  multiple: propTypes.bool,\r\n  onChange: PropTypes.func,\r\n  selectArray: PropTypes.arrayOf(PropTypes.object),\r\n  selectorName: propTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"D:/Projects/Ciklum/Calendar_React/calendar/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{lazy,Suspense,useState}from'react';import{Switch,Route,Redirect}from'react-router-dom';import{ToastContainer}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import'bootstrap/dist/css/bootstrap.min.css';import Container from'./components/container/container';import{userContext}from'./userContext';// lazy import\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainView=/*#__PURE__*/lazy(function(){return import('./views/main/main-view');});var AuthView=/*#__PURE__*/lazy(function(){return import('./views/auth/auth-view');});var NotFoundView=/*#__PURE__*/lazy(function(){return import('./views/NotFoundView/NotFoundView');});function App(){// initialisation user state\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),authUser=_useState2[0],setAuthUser=_useState2[1];// initialisation getting user context\nvar getUser=function getUser(value){return setAuthUser(value);};return/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{children:\"Downloading...\"}),children:/*#__PURE__*/_jsx(userContext.Provider,{value:{getUser:getUser},children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,children:authUser?/*#__PURE__*/_jsx(MainView,{user:authUser}):/*#__PURE__*/_jsx(Redirect,{to:\"/authorisation\"})}),/*#__PURE__*/_jsx(Route,{path:\"/authorisation\",children:/*#__PURE__*/_jsx(AuthView,{})}),/*#__PURE__*/_jsx(Route,{children:/*#__PURE__*/_jsx(NotFoundView,{})})]}),/*#__PURE__*/_jsx(ToastContainer,{autoClose:1800})]})})});}export default App;","map":{"version":3,"sources":["D:/Projects/Ciklum/Calendar_React/calendar/src/App.js"],"names":["lazy","Suspense","useState","Switch","Route","Redirect","ToastContainer","Container","userContext","MainView","AuthView","NotFoundView","App","authUser","setAuthUser","getUser","value"],"mappings":"iKAAA,OAASA,IAAT,CAAeC,QAAf,CAAyBC,QAAzB,KAAyC,OAAzC,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,QAAxB,KAAwC,kBAAxC,CAEA,OAASC,cAAT,KAA+B,gBAA/B,CAEA,MAAO,uCAAP,CACA,MAAO,sCAAP,CAEA,MAAOC,CAAAA,SAAP,KAAsB,kCAAtB,CACA,OAASC,WAAT,KAA4B,eAA5B,CAEA;wFACA,GAAMC,CAAAA,QAAQ,cAAGT,IAAI,CAAC,iBAAM,QAAO,wBAAP,CAAN,EAAD,CAArB,CACA,GAAMU,CAAAA,QAAQ,cAAGV,IAAI,CAAC,iBAAM,QAAO,wBAAP,CAAN,EAAD,CAArB,CACA,GAAMW,CAAAA,YAAY,cAAGX,IAAI,CAAC,iBAAM,QAAO,mCAAP,CAAN,EAAD,CAAzB,CAEA,QAASY,CAAAA,GAAT,EAAe,CACb;AADa,cAEmBV,QAAQ,EAF3B,wCAENW,QAFM,eAEIC,WAFJ,eAIb;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,QAAIF,CAAAA,WAAW,CAACE,KAAD,CAAf,EAArB,CAEA,mBACE,KAAC,QAAD,EAAU,QAAQ,cAAE,uCAApB,uBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAED,OAAO,CAAPA,OAAF,CAA7B,uBACE,MAAC,SAAD,yBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,UACGF,QAAQ,cACP,KAAC,QAAD,EAAU,IAAI,CAAEA,QAAhB,EADO,cAGP,KAAC,QAAD,EAAU,EAAE,CAAC,gBAAb,EAJJ,EADF,cASE,KAAC,KAAD,EAAO,IAAI,CAAC,gBAAZ,uBACE,KAAC,QAAD,IADF,EATF,cAYE,KAAC,KAAD,wBACE,KAAC,YAAD,IADF,EAZF,GADF,cAiBE,KAAC,cAAD,EAAgB,SAAS,CAAE,IAA3B,EAjBF,GADF,EADF,EADF,CAyBD,CAED,cAAeD,CAAAA,GAAf","sourcesContent":["import { lazy, Suspense, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Container from './components/container/container';\r\nimport { userContext } from './userContext';\r\n\r\n// lazy import\r\nconst MainView = lazy(() => import('./views/main/main-view'));\r\nconst AuthView = lazy(() => import('./views/auth/auth-view'));\r\nconst NotFoundView = lazy(() => import('./views/NotFoundView/NotFoundView'));\r\n\r\nfunction App() {\r\n  // initialisation user state\r\n  const [authUser, setAuthUser] = useState();\r\n\r\n  // initialisation getting user context\r\n  const getUser = value => setAuthUser(value);\r\n\r\n  return (\r\n    <Suspense fallback={<div>Downloading...</div>}>\r\n      <userContext.Provider value={{ getUser }}>\r\n        <Container>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              {authUser ? (\r\n                <MainView user={authUser} />\r\n              ) : (\r\n                <Redirect to=\"/authorisation\" />\r\n              )}\r\n            </Route>\r\n\r\n            <Route path=\"/authorisation\">\r\n              <AuthView />\r\n            </Route>\r\n            <Route>\r\n              <NotFoundView />\r\n            </Route>\r\n          </Switch>\r\n          <ToastContainer autoClose={1800} />\r\n        </Container>\r\n      </userContext.Provider>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}
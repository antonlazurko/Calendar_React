{"version":3,"sources":["components/selector/selector.js","data/user.js","data/calendar-data.js","views/main/MainView.module.css","views/create/creat-event-view.js","sevices/API-service.js","views/main/main-view.js"],"names":["Selector","multiple","onChange","selectArray","selectorName","getSelectedMembers","target","values","select","options","i","length","selected","push","Number","value","id","Group","controlId","Label","Control","className","as","custom","e","map","item","user","name","User","isAdmin","this","Admin","daysArray","timeArray","participants","meetings","module","exports","CreateEventView","handleClose","modalShow","controlOptions","handleSubmit","useState","eventName","setEventName","participantName","setParticipantName","day","setDay","time","setTime","useEffect","console","log","Modal","show","onHide","animation","Header","closeButton","Title","Body","InputGroup","size","Prepend","Text","FormControl","aria-label","aria-describedby","Footer","Button","variant","onClick","SYSTEM","ENTITY","URL","instance","eventsSingleton","a","axios","get","data","status","message","body","post","delete","MainView","setMeetings","meetingsByParticipant","setMeetingsByParticipant","selectedParticipant","setSelectedParticipant","setModalShow","validateForm","toast","error","position","POSITION","TOP_CENTER","filter","meeting","info","title","stringifyMeeting","JSON","stringify","replace","addEvent","then","success","parsedMeeting","JSON5","parse","prevMeetings","deleteEvent","event","deleteEl","tagName","window","confirm","parentNode","textContent","meetingId","getAttribute","innerHTML","getEvent","parsedMeetings","fetchData","includes","styles","header","disabled","Table","striped","bordered","hover","timeObj","index","availableMeetings","days","Array","fill","td","data-id","deleteBtn"],"mappings":"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","file":"static/js/5.54e64293.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Form } from 'react-bootstrap';\r\nimport { propTypes } from 'react-bootstrap/esm/Image';\r\n\r\nexport default function Selector({\r\n  multiple,\r\n  onChange,\r\n  selectArray,\r\n  selectorName,\r\n}) {\r\n  const getSelectedMembers = target => {\r\n    if (target.multiple) {\r\n      const values = [];\r\n\r\n      const select = target.options;\r\n      for (let i = 0; i < select.length; i += 1) {\r\n        if (select[i].selected) {\r\n          values.push(Number(select[i].value));\r\n        }\r\n      }\r\n      onChange(values);\r\n      return;\r\n    }\r\n    onChange(Number(target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form id={selectorName}>\r\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n          <Form.Label>Select {`${selectorName}`}</Form.Label>\r\n          <Form.Control\r\n            className=\"selector\"\r\n            as=\"select\"\r\n            multiple={multiple}\r\n            custom\r\n            onChange={e => getSelectedMembers(e.target)}\r\n          >\r\n            {selectArray?.map(item => (\r\n              <option\r\n                key={item.user?.id || item.id}\r\n                value={item.user?.id || item.id}\r\n              >\r\n                {item.user?.name || item.name}\r\n              </option>\r\n            ))}\r\n          </Form.Control>\r\n        </Form.Group>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\nSelector.propTypes = {\r\n  multiple: propTypes.bool,\r\n  onChange: PropTypes.func,\r\n  selectArray: PropTypes.arrayOf(PropTypes.object),\r\n  selectorName: propTypes.string,\r\n};\r\n","export class User {\r\n  isAdmin = false;\r\n  constructor(user) {\r\n    this.user = user;\r\n  }\r\n}\r\nexport class Admin extends User {\r\n  constructor(user) {\r\n    super(user);\r\n    this.isAdmin = true;\r\n  }\r\n}\r\n","import { User, Admin } from './user';\r\n\r\nexport const daysArray = [\r\n  {\r\n    id: 0,\r\n    name: 'monday',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: 'thuesday',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'wednesday',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'thursday',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'friday',\r\n  },\r\n];\r\nexport const timeArray = [\r\n  {\r\n    id: 0,\r\n    name: '10:00',\r\n  },\r\n  {\r\n    id: 1,\r\n    name: '11:00',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '12:00',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '13:00',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '14:00',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '15:00',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '16:00',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '17:00',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '18:00',\r\n  },\r\n];\r\n\r\nexport const participants = [\r\n  new User({\r\n    id: 1,\r\n    name: 'John',\r\n    meetings: [],\r\n  }),\r\n  new User({\r\n    id: 2,\r\n    name: 'Maria',\r\n    meetings: [],\r\n  }),\r\n  new User({\r\n    id: 3,\r\n    name: 'David',\r\n    meetings: [],\r\n  }),\r\n  new User({\r\n    id: 4,\r\n    name: 'Anna',\r\n    meetings: [],\r\n  }),\r\n  new Admin({\r\n    id: 5,\r\n    name: 'BIG BOSS',\r\n    meetings: [],\r\n  }),\r\n];\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainView_header__Bnb5Y\",\"deleteBtn\":\"MainView_deleteBtn__26nOX\"};","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { FormControl, InputGroup, Button, Modal } from 'react-bootstrap';\r\n\r\nimport Selector from '../../components/selector/selector';\r\n\r\nexport default function CreateEventView({\r\n  handleClose,\r\n  modalShow,\r\n  controlOptions,\r\n  handleSubmit,\r\n}) {\r\n  const { participants, daysArray, timeArray } = controlOptions;\r\n  const [eventName, setEventName] = useState('');\r\n  const [participantName, setParticipantName] = useState();\r\n  const [day, setDay] = useState('');\r\n  const [time, setTime] = useState('');\r\n  useEffect(() => {\r\n    console.log(participantName);\r\n  }, [participantName]);\r\n  return (\r\n    <>\r\n      <Modal show={modalShow} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Create event</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <InputGroup\r\n            size=\"sm\"\r\n            className=\"mb-3\"\r\n            onChange={e => setEventName(e.target.value)}\r\n          >\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id=\"inputGroup-sizing-sm\">Name</InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              aria-label=\"Small\"\r\n              aria-describedby=\"inputGroup-sizing-sm\"\r\n            />\r\n          </InputGroup>\r\n          <Selector\r\n            multiple={true}\r\n            onChange={value => setParticipantName(value)}\r\n            selectArray={participants}\r\n            selectorName=\"participant\"\r\n          />\r\n          <Selector\r\n            multiple={false}\r\n            onChange={value => setDay(Number(value))}\r\n            selectArray={daysArray}\r\n            selectorName=\"day\"\r\n          />\r\n          <Selector\r\n            multiple={false}\r\n            onChange={value => setTime(Number(value))}\r\n            selectArray={timeArray}\r\n            selectorName=\"time\"\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            variant=\"primary\"\r\n            onClick={() => handleSubmit(participantName, eventName, day, time)}\r\n          >\r\n            Create event\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nCreateEventView.propTypes = {\r\n  handleClose: PropTypes.func,\r\n  modalShow: PropTypes.bool,\r\n  controlOptions: PropTypes.objectOf(PropTypes.array),\r\n  handleSubmit: PropTypes.func,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst SYSTEM = `anton_lazurko`;\r\nconst ENTITY = `events`;\r\nconst URL = 'http://158.101.166.74:8080/api/data/';\r\n\r\nlet instance = null;\r\n\r\nclass EventAPI {\r\n  constructor() {\r\n    if (!instance) {\r\n      instance = this;\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  async getEvent() {\r\n    try {\r\n      const { data, status } = await axios.get(`${URL}${SYSTEM}/${ENTITY}`);\r\n      return { data, status };\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  async addEvent(body) {\r\n    try {\r\n      const { data, status } = await axios.post(\r\n        `${URL}${SYSTEM}/${ENTITY}`,\r\n        body,\r\n      );\r\n      return { data, status };\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      return error.message;\r\n    }\r\n  }\r\n\r\n  async deleteEvent(id) {\r\n    try {\r\n      const { status } = await axios.delete(`${URL}${SYSTEM}/${ENTITY}/${id}`);\r\n      return status;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n      return error.message;\r\n    }\r\n  }\r\n}\r\nexport const eventsSingleton = new EventAPI();\r\n","import PropTypes from 'prop-types';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport JSON5 from 'json5';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Selector from '../../components/selector/selector';\r\nimport CreateEventView from '../create/creat-event-view';\r\nimport { participants, daysArray, timeArray } from '../../data/calendar-data';\r\n\r\nimport { eventsSingleton } from '../../sevices/API-service';\r\n\r\nimport styles from './MainView.module.css';\r\n\r\nexport default function MainView({ user }) {\r\n  const [meetings, setMeetings] = useState([]);\r\n  const [meetingsByParticipant, setMeetingsByParticipant] = useState([]);\r\n  const [selectedParticipant, setSelectedParticipant] = useState('');\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  // open modal fn\r\n  const handleModalShow = () => setModalShow(true);\r\n\r\n  // close modal fn\r\n  const handleModalClose = () => setModalShow(false);\r\n\r\n  // sync validation form\r\n  const validateForm = (participantName, eventName, day, time) => {\r\n    if (eventName === '') {\r\n      toast.error('Please type event name!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    if (day === '') {\r\n      toast.error('Please choose day!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    if (time === '') {\r\n      toast.error('Please choose time!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    if (participantName.length === 0) {\r\n      toast.error('Please choose participant!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    const isAvailableTime = meetings.filter(\r\n      meeting =>\r\n        meeting.data.info.day === day && meeting.data.info.time === time,\r\n    );\r\n    if (isAvailableTime.length) {\r\n      toast.error('Please choose other time or date!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // submit form\r\n  const handleSubmit = async (participantName, eventName, day, time) => {\r\n    if (!(await validateForm(participantName, eventName, day, time))) {\r\n      return;\r\n    }\r\n    const meeting = {\r\n      title: `'${eventName}'`,\r\n      participants: participantName,\r\n      info: {\r\n        day,\r\n        time,\r\n      },\r\n    };\r\n\r\n    const stringifyMeeting = JSON.stringify(meeting).replace(/\"/g, '');\r\n    await eventsSingleton\r\n      .addEvent(\r\n        `{\r\n    \"data\":\"${stringifyMeeting}\"\r\n  }`,\r\n      )\r\n      .then(({ data, status }) => {\r\n        if (status === 200) {\r\n          toast.success('Event succesfully added!', {\r\n            position: toast.POSITION.TOP_CENTER,\r\n          });\r\n          const parsedMeeting = {\r\n            id: data.id,\r\n            data: JSON5.parse(data.data),\r\n          };\r\n          setMeetings(prevMeetings => [...prevMeetings, parsedMeeting]);\r\n        }\r\n      });\r\n    setModalShow(false);\r\n  };\r\n\r\n  // select participant fn\r\n  const getParticipant = value => {\r\n    if (!value) {\r\n      setSelectedParticipant('');\r\n      return;\r\n    }\r\n    setSelectedParticipant(Number(value));\r\n  };\r\n\r\n  // deleting event on delete button click\r\n  const deleteEvent = async event => {\r\n    const deleteEl = event.target;\r\n    if (deleteEl.tagName === 'BUTTON') {\r\n      const result = window.confirm(\r\n        `Are you shure you want to delete \"${deleteEl.parentNode.textContent}\" event?`,\r\n      );\r\n      if (result) {\r\n        const meetingId = event.target.getAttribute('data-id');\r\n\r\n        await eventsSingleton.deleteEvent(meetingId).then(status => {\r\n          if (status === 204) {\r\n            toast.success('Event succesfully deleted!', {\r\n              position: toast.POSITION.TOP_CENTER,\r\n            });\r\n            deleteEl.parentNode.innerHTML = '';\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // fetching meeting at first render\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const { data, status } = await eventsSingleton.getEvent();\r\n      if (data) {\r\n        const parsedMeetings = data?.map(event => ({\r\n          id: event.id,\r\n          data: JSON5.parse(event.data),\r\n        }));\r\n        setMeetings(parsedMeetings);\r\n        toast.success(`Events succesfully get with status: ${status}!`, {\r\n          position: toast.POSITION.TOP_CENTER,\r\n        });\r\n        return;\r\n      }\r\n      toast.success('There are no events in your calendar yet!', {\r\n        position: toast.POSITION.TOP_CENTER,\r\n      });\r\n      setMeetings([]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // filter events by selected participant\r\n  useEffect(() => {\r\n    selectedParticipant\r\n      ? setMeetingsByParticipant(\r\n          meetings.filter(meeting => {\r\n            return meeting.data.participants.includes(selectedParticipant);\r\n          }),\r\n        )\r\n      : setMeetingsByParticipant(meetings);\r\n  }, [selectedParticipant, meetings]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.header}>\r\n        <Selector\r\n          selectArray={participants}\r\n          onChange={getParticipant}\r\n          multiple={false}\r\n          selectorName=\"participant\"\r\n        />\r\n        <Button\r\n          variant=\"primary\"\r\n          disabled={!user.isAdmin}\r\n          onClick={() => handleModalShow()}\r\n        >\r\n          Create event\r\n        </Button>\r\n      </div>\r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            {daysArray.map(day => (\r\n              <th key={day.id}>{day.name}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {timeArray.map((timeObj, index) => {\r\n            const availableMeetings = meetingsByParticipant?.filter(\r\n              meeting => meeting.data.info.time === index,\r\n            );\r\n            const days = new Array(5).fill('');\r\n            availableMeetings?.map(meeting => {\r\n              const { day } = meeting.data.info;\r\n              days[day] = {\r\n                name: `${meeting.data.title}`,\r\n                id: meeting.id,\r\n                className: 'succes',\r\n              };\r\n              return true;\r\n            });\r\n            return (\r\n              <tr key={timeObj.id}>\r\n                <td>{timeObj.name}</td>\r\n                {days.map((day, index) => (\r\n                  <td key={day.id || index} className={styles.td}>\r\n                    {day.name || ''}\r\n                    {day.name && (\r\n                      <Button\r\n                        key={day.id}\r\n                        data-id={day.id}\r\n                        variant=\"info\"\r\n                        disabled={!user.isAdmin}\r\n                        onClick={e => deleteEvent(e)}\r\n                        className={styles.deleteBtn}\r\n                      >\r\n                        x\r\n                      </Button>\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      {modalShow && (\r\n        <CreateEventView\r\n          modalShow={modalShow}\r\n          handleSubmit={handleSubmit}\r\n          handleClose={handleModalClose}\r\n          controlOptions={{ participants, daysArray, timeArray }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\nMainView.propTypes = {\r\n  user: PropTypes.object,\r\n};\r\n"],"sourceRoot":""}